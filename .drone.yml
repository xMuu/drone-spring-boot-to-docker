kind: pipeline
type: docker
name: defalue

steps:
  - name: build image
    image: maven:3.8.4-jdk-11
    environment:
      DOCKER_REGISTRY:
        from_secret: docker_registry_url
    volumes:
      - name: maven-build
        path: /app/build
      - name: maven-cache
        path: /root/.m2
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - mvn clean spring-boot:build-image -Dspring-boot.build-image.imageName=$DOCKER_REGISTRY/xmuu/drone-ci-demo

  - name: push image
    image: docker:20.10.6
    environment:
      DOCKER_REGISTRY:
        from_secret: docker_registry_url
      DOCKER_USERNAME:
        from_secret: docker_registry_username
      DOCKER_PASSWORD:
        from_secret: docker_registry_password
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - docker push $DOCKER_REGISTRY/xmuu/drone-ci-demo

  - name: send telegram notification
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_bot_token
      to:
        from_secret: tg_user_id
      disable.webpage.preview: false
      message: >
        *Build #{{build.number}}* of `{{repo.namespace}}/{{repo.name}}`
        
        *Branch:* {{commit.branch}}
        
        *Author:* {{commit.author}} ({{commit.email}})
        
        *Commit:* `{{truncate commit.sha 8}}`
        
        *Message:* {{commit.message}}
        
        *Build Time:* {{since build.started}}
        
        *Result:* {{uppercasefirst build.status}}
        
        *Link:* [Click me!]({{build.link}})

volumes:
  - name: maven-build
    host:
      path: /home/ubuntu/DroneVolumes/maven/build
  - name: maven-cache
    host:
      path: /home/ubuntu/DroneVolumes/maven/cache
  - name: docker-sock
    host:
      path: /var/run/docker.sock